   1               		.file	"descriptor.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.CALLBACK_USB_GetDescriptor,"ax",@progbits
  11               	.global	CALLBACK_USB_GetDescriptor
  13               	CALLBACK_USB_GetDescriptor:
  14               	.LFB100:
  15               		.file 1 "../../tmk_core/protocol/lufa/descriptor.c"
   1:../../tmk_core/protocol/lufa/descriptor.c **** /* 
   2:../../tmk_core/protocol/lufa/descriptor.c ****  * Copyright 2012 Jun Wako <wakojun@gmail.com>
   3:../../tmk_core/protocol/lufa/descriptor.c ****  * This file is based on:
   4:../../tmk_core/protocol/lufa/descriptor.c ****  *     LUFA-120219/Demos/Device/Lowlevel/KeyboardMouse
   5:../../tmk_core/protocol/lufa/descriptor.c ****  *     LUFA-120219/Demos/Device/Lowlevel/GenericHID
   6:../../tmk_core/protocol/lufa/descriptor.c ****  */
   7:../../tmk_core/protocol/lufa/descriptor.c **** 
   8:../../tmk_core/protocol/lufa/descriptor.c **** /*
   9:../../tmk_core/protocol/lufa/descriptor.c ****              LUFA Library
  10:../../tmk_core/protocol/lufa/descriptor.c ****      Copyright (C) Dean Camera, 2012.
  11:../../tmk_core/protocol/lufa/descriptor.c **** 
  12:../../tmk_core/protocol/lufa/descriptor.c ****   dean [at] fourwalledcubicle [dot] com
  13:../../tmk_core/protocol/lufa/descriptor.c ****            www.lufa-lib.org
  14:../../tmk_core/protocol/lufa/descriptor.c **** */
  15:../../tmk_core/protocol/lufa/descriptor.c **** 
  16:../../tmk_core/protocol/lufa/descriptor.c **** /*
  17:../../tmk_core/protocol/lufa/descriptor.c ****   Copyright 2012  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  18:../../tmk_core/protocol/lufa/descriptor.c ****   Copyright 2010  Denver Gingerich (denver [at] ossguy [dot] com)
  19:../../tmk_core/protocol/lufa/descriptor.c **** 
  20:../../tmk_core/protocol/lufa/descriptor.c ****   Permission to use, copy, modify, distribute, and sell this
  21:../../tmk_core/protocol/lufa/descriptor.c ****   software and its documentation for any purpose is hereby granted
  22:../../tmk_core/protocol/lufa/descriptor.c ****   without fee, provided that the above copyright notice appear in
  23:../../tmk_core/protocol/lufa/descriptor.c ****   all copies and that both that the copyright notice and this
  24:../../tmk_core/protocol/lufa/descriptor.c ****   permission notice and warranty disclaimer appear in supporting
  25:../../tmk_core/protocol/lufa/descriptor.c ****   documentation, and that the name of the author not be used in
  26:../../tmk_core/protocol/lufa/descriptor.c ****   advertising or publicity pertaining to distribution of the
  27:../../tmk_core/protocol/lufa/descriptor.c ****   software without specific, written prior permission.
  28:../../tmk_core/protocol/lufa/descriptor.c **** 
  29:../../tmk_core/protocol/lufa/descriptor.c ****   The author disclaim all warranties with regard to this
  30:../../tmk_core/protocol/lufa/descriptor.c ****   software, including all implied warranties of merchantability
  31:../../tmk_core/protocol/lufa/descriptor.c ****   and fitness.  In no event shall the author be liable for any
  32:../../tmk_core/protocol/lufa/descriptor.c ****   special, indirect or consequential damages or any damages
  33:../../tmk_core/protocol/lufa/descriptor.c ****   whatsoever resulting from loss of use, data or profits, whether
  34:../../tmk_core/protocol/lufa/descriptor.c ****   in an action of contract, negligence or other tortious action,
  35:../../tmk_core/protocol/lufa/descriptor.c ****   arising out of or in connection with the use or performance of
  36:../../tmk_core/protocol/lufa/descriptor.c ****   this software.
  37:../../tmk_core/protocol/lufa/descriptor.c **** */
  38:../../tmk_core/protocol/lufa/descriptor.c **** 
  39:../../tmk_core/protocol/lufa/descriptor.c **** #include "util.h"
  40:../../tmk_core/protocol/lufa/descriptor.c **** #include "report.h"
  41:../../tmk_core/protocol/lufa/descriptor.c **** #include "descriptor.h"
  42:../../tmk_core/protocol/lufa/descriptor.c **** 
  43:../../tmk_core/protocol/lufa/descriptor.c **** 
  44:../../tmk_core/protocol/lufa/descriptor.c **** /*******************************************************************************
  45:../../tmk_core/protocol/lufa/descriptor.c ****  * HID Report Descriptors
  46:../../tmk_core/protocol/lufa/descriptor.c ****  ******************************************************************************/
  47:../../tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_HIDReport_Datatype_t PROGMEM KeyboardReport[] =
  48:../../tmk_core/protocol/lufa/descriptor.c **** {
  49:../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE_PAGE(8, 0x01), /* Generic Desktop */
  50:../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE(8, 0x06), /* Keyboard */
  51:../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_COLLECTION(8, 0x01), /* Application */
  52:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_PAGE(8, 0x07), /* Key Codes */
  53:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MINIMUM(8, 0xE0), /* Keyboard Left Control */
  54:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MAXIMUM(8, 0xE7), /* Keyboard Right GUI */
  55:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MINIMUM(8, 0x00),
  56:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MAXIMUM(8, 0x01),
  57:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 0x08),
  58:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x01),
  59:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_ABSOLUTE),
  60:../../tmk_core/protocol/lufa/descriptor.c **** 
  61:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 0x01),
  62:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x08),
  63:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_INPUT(8, HID_IOF_CONSTANT),  /* reserved */
  64:../../tmk_core/protocol/lufa/descriptor.c **** 
  65:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_PAGE(8, 0x08), /* LEDs */
  66:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MINIMUM(8, 0x01), /* Num Lock */
  67:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MAXIMUM(8, 0x05), /* Kana */
  68:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 0x05),
  69:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x01),
  70:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_OUTPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_ABSOLUTE | HID_IOF_NON_VOLATILE)
  71:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 0x01),
  72:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x03),
  73:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_OUTPUT(8, HID_IOF_CONSTANT),
  74:../../tmk_core/protocol/lufa/descriptor.c **** 
  75:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_PAGE(8, 0x07), /* Keyboard */
  76:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MINIMUM(8, 0x00), /* Reserved (no event indicated) */
  77:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MAXIMUM(8, 0xFF), /* Keyboard Application */
  78:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MINIMUM(8, 0x00),
  79:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MAXIMUM(8, 0xFF),
  80:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 0x06),
  81:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x08),
  82:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_ARRAY | HID_IOF_ABSOLUTE),
  83:../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_END_COLLECTION(0),
  84:../../tmk_core/protocol/lufa/descriptor.c **** };
  85:../../tmk_core/protocol/lufa/descriptor.c **** 
  86:../../tmk_core/protocol/lufa/descriptor.c **** #ifdef MOUSE_ENABLE
  87:../../tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_HIDReport_Datatype_t PROGMEM MouseReport[] =
  88:../../tmk_core/protocol/lufa/descriptor.c **** {
  89:../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE_PAGE(8, 0x01), /* Generic Desktop */
  90:../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE(8, 0x02), /* Mouse */
  91:../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_COLLECTION(8, 0x01), /* Application */
  92:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE(8, 0x01), /* Pointer */
  93:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_COLLECTION(8, 0x00), /* Physical */
  94:../../tmk_core/protocol/lufa/descriptor.c **** 
  95:../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_USAGE_PAGE(8, 0x09), /* Button */
  96:../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_USAGE_MINIMUM(8, 0x01),  /* Button 1 */
  97:../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_USAGE_MAXIMUM(8, 0x05),  /* Button 5 */
  98:../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_LOGICAL_MINIMUM(8, 0x00),
  99:../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_LOGICAL_MAXIMUM(8, 0x01),
 100:../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_REPORT_COUNT(8, 0x05),
 101:../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_REPORT_SIZE(8, 0x01),
 102:../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_ABSOLUTE),
 103:../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_REPORT_COUNT(8, 0x01),
 104:../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_REPORT_SIZE(8, 0x03),
 105:../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_INPUT(8, HID_IOF_CONSTANT),
 106:../../tmk_core/protocol/lufa/descriptor.c **** 
 107:../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_USAGE_PAGE(8, 0x01), /* Generic Desktop */
 108:../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_USAGE(8, 0x30), /* Usage X */
 109:../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_USAGE(8, 0x31), /* Usage Y */
 110:../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_LOGICAL_MINIMUM(8, -127),
 111:../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_LOGICAL_MAXIMUM(8, 127),
 112:../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_REPORT_COUNT(8, 0x02),
 113:../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_REPORT_SIZE(8, 0x08),
 114:../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_RELATIVE),
 115:../../tmk_core/protocol/lufa/descriptor.c **** 
 116:../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_USAGE(8, 0x38), /* Wheel */
 117:../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_LOGICAL_MINIMUM(8, -127),
 118:../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_LOGICAL_MAXIMUM(8, 127),
 119:../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_REPORT_COUNT(8, 0x01),
 120:../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_REPORT_SIZE(8, 0x08),
 121:../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_RELATIVE),
 122:../../tmk_core/protocol/lufa/descriptor.c **** 
 123:../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_USAGE_PAGE(8, 0x0C), /* Consumer */
 124:../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_USAGE(16, 0x0238), /* AC Pan (Horizontal wheel) */
 125:../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_LOGICAL_MINIMUM(8, -127),
 126:../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_LOGICAL_MAXIMUM(8, 127),
 127:../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_REPORT_COUNT(8, 0x01),
 128:../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_REPORT_SIZE(8, 0x08),
 129:../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_RELATIVE),
 130:../../tmk_core/protocol/lufa/descriptor.c **** 
 131:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_END_COLLECTION(0),
 132:../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_END_COLLECTION(0),
 133:../../tmk_core/protocol/lufa/descriptor.c **** };
 134:../../tmk_core/protocol/lufa/descriptor.c **** #endif
 135:../../tmk_core/protocol/lufa/descriptor.c **** 
 136:../../tmk_core/protocol/lufa/descriptor.c **** #ifdef EXTRAKEY_ENABLE
 137:../../tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_HIDReport_Datatype_t PROGMEM ExtrakeyReport[] =
 138:../../tmk_core/protocol/lufa/descriptor.c **** {
 139:../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE_PAGE(8, 0x01), /* Generic Desktop */
 140:../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE(8, 0x80), /* System Control */
 141:../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_COLLECTION(8, 0x01), /* Application */
 142:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_ID(8, REPORT_ID_SYSTEM),
 143:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MINIMUM(16, 0x0001),
 144:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MAXIMUM(16, 0x00B7),
 145:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MINIMUM(16, 0x0001), /* System Power Down */
 146:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MAXIMUM(16, 0x00B7), /* System Display LCD Autoscale */
 147:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 16),
 148:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 1),
 149:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_ARRAY | HID_IOF_ABSOLUTE),
 150:../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_END_COLLECTION(0),
 151:../../tmk_core/protocol/lufa/descriptor.c **** 
 152:../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE_PAGE(8, 0x0C), /* Consumer */
 153:../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE(8, 0x01), /* Consumer Control */
 154:../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_COLLECTION(8, 0x01), /* Application */
 155:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_ID(8, REPORT_ID_CONSUMER),
 156:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MINIMUM(16, 0x0001),
 157:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MAXIMUM(16, 0x029C),
 158:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MINIMUM(16, 0x0001), /* +10 */
 159:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MAXIMUM(16, 0x029C), /* AC Distribute Vertically */
 160:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 16),
 161:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 1),
 162:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_ARRAY | HID_IOF_ABSOLUTE),
 163:../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_END_COLLECTION(0),
 164:../../tmk_core/protocol/lufa/descriptor.c **** };
 165:../../tmk_core/protocol/lufa/descriptor.c **** #endif
 166:../../tmk_core/protocol/lufa/descriptor.c **** 
 167:../../tmk_core/protocol/lufa/descriptor.c **** #ifdef CONSOLE_ENABLE
 168:../../tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_HIDReport_Datatype_t PROGMEM ConsoleReport[] =
 169:../../tmk_core/protocol/lufa/descriptor.c **** {
 170:../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE_PAGE(16, 0xFF31), /* Vendor Page(PJRC Teensy compatible) */
 171:../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE(8, 0x74), /* Vendor Usage(PJRC Teensy compatible) */
 172:../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_COLLECTION(8, 0x01), /* Application */
 173:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE(8, 0x75), /* Vendor Usage 0x75 */
 174:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MINIMUM(8, 0x00),
 175:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MAXIMUM(8, 0xFF),
 176:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, CONSOLE_EPSIZE),
 177:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x08),
 178:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_ABSOLUTE),
 179:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE(8, 0x76), /* Vendor Usage 0x76 */
 180:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MINIMUM(8, 0x00),
 181:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MAXIMUM(8, 0xFF),
 182:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, CONSOLE_EPSIZE),
 183:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x08),
 184:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_OUTPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_ABSOLUTE | HID_IOF_NON_VOLATILE)
 185:../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_END_COLLECTION(0),
 186:../../tmk_core/protocol/lufa/descriptor.c **** };
 187:../../tmk_core/protocol/lufa/descriptor.c **** #endif
 188:../../tmk_core/protocol/lufa/descriptor.c **** 
 189:../../tmk_core/protocol/lufa/descriptor.c **** #ifdef NKRO_ENABLE
 190:../../tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_HIDReport_Datatype_t PROGMEM NKROReport[] =
 191:../../tmk_core/protocol/lufa/descriptor.c **** {
 192:../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE_PAGE(8, 0x01), /* Generic Desktop */
 193:../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE(8, 0x06), /* Keyboard */
 194:../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_COLLECTION(8, 0x01), /* Application */
 195:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_PAGE(8, 0x07), /* Key Codes */
 196:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MINIMUM(8, 0xE0), /* Keyboard Left Control */
 197:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MAXIMUM(8, 0xE7), /* Keyboard Right GUI */
 198:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MINIMUM(8, 0x00),
 199:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MAXIMUM(8, 0x01),
 200:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 0x08),
 201:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x01),
 202:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_ABSOLUTE),
 203:../../tmk_core/protocol/lufa/descriptor.c **** 
 204:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_PAGE(8, 0x08), /* LEDs */
 205:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MINIMUM(8, 0x01), /* Num Lock */
 206:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MAXIMUM(8, 0x05), /* Kana */
 207:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 0x05),
 208:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x01),
 209:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_OUTPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_ABSOLUTE | HID_IOF_NON_VOLATILE)
 210:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 0x01),
 211:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x03),
 212:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_OUTPUT(8, HID_IOF_CONSTANT),
 213:../../tmk_core/protocol/lufa/descriptor.c **** 
 214:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_PAGE(8, 0x07), /* Key Codes */
 215:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MINIMUM(8, 0x00), /* Keyboard 0 */
 216:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MAXIMUM(8, (NKRO_EPSIZE-1)*8-1), /* Keyboard Right GUI */
 217:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MINIMUM(8, 0x00),
 218:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MAXIMUM(8, 0x01),
 219:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, (NKRO_EPSIZE-1)*8),
 220:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x01),
 221:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_ABSOLUTE),
 222:../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_END_COLLECTION(0),
 223:../../tmk_core/protocol/lufa/descriptor.c **** };
 224:../../tmk_core/protocol/lufa/descriptor.c **** #endif
 225:../../tmk_core/protocol/lufa/descriptor.c **** 
 226:../../tmk_core/protocol/lufa/descriptor.c **** /*******************************************************************************
 227:../../tmk_core/protocol/lufa/descriptor.c ****  * Device Descriptors
 228:../../tmk_core/protocol/lufa/descriptor.c ****  ******************************************************************************/
 229:../../tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_Device_t PROGMEM DeviceDescriptor =
 230:../../tmk_core/protocol/lufa/descriptor.c **** {
 231:../../tmk_core/protocol/lufa/descriptor.c ****     .Header                 = {.Size = sizeof(USB_Descriptor_Device_t), .Type = DTYPE_Device},
 232:../../tmk_core/protocol/lufa/descriptor.c **** 
 233:../../tmk_core/protocol/lufa/descriptor.c ****     .USBSpecification       = VERSION_BCD(1,1,0),
 234:../../tmk_core/protocol/lufa/descriptor.c ****     .Class                  = USB_CSCP_NoDeviceClass,
 235:../../tmk_core/protocol/lufa/descriptor.c ****     .SubClass               = USB_CSCP_NoDeviceSubclass,
 236:../../tmk_core/protocol/lufa/descriptor.c ****     .Protocol               = USB_CSCP_NoDeviceProtocol,
 237:../../tmk_core/protocol/lufa/descriptor.c **** 
 238:../../tmk_core/protocol/lufa/descriptor.c ****     .Endpoint0Size          = FIXED_CONTROL_ENDPOINT_SIZE,
 239:../../tmk_core/protocol/lufa/descriptor.c **** 
 240:../../tmk_core/protocol/lufa/descriptor.c ****     /* specified in config.h */
 241:../../tmk_core/protocol/lufa/descriptor.c ****     .VendorID               = VENDOR_ID,
 242:../../tmk_core/protocol/lufa/descriptor.c ****     .ProductID              = PRODUCT_ID,
 243:../../tmk_core/protocol/lufa/descriptor.c ****     .ReleaseNumber          = DEVICE_VER,
 244:../../tmk_core/protocol/lufa/descriptor.c **** 
 245:../../tmk_core/protocol/lufa/descriptor.c ****     .ManufacturerStrIndex   = 0x01,
 246:../../tmk_core/protocol/lufa/descriptor.c ****     .ProductStrIndex        = 0x02,
 247:../../tmk_core/protocol/lufa/descriptor.c ****     .SerialNumStrIndex      = NO_DESCRIPTOR,
 248:../../tmk_core/protocol/lufa/descriptor.c **** 
 249:../../tmk_core/protocol/lufa/descriptor.c ****     .NumberOfConfigurations = FIXED_NUM_CONFIGURATIONS
 250:../../tmk_core/protocol/lufa/descriptor.c **** };
 251:../../tmk_core/protocol/lufa/descriptor.c **** 
 252:../../tmk_core/protocol/lufa/descriptor.c **** /*******************************************************************************
 253:../../tmk_core/protocol/lufa/descriptor.c ****  * Configuration Descriptors
 254:../../tmk_core/protocol/lufa/descriptor.c ****  ******************************************************************************/
 255:../../tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_Configuration_t PROGMEM ConfigurationDescriptor =
 256:../../tmk_core/protocol/lufa/descriptor.c **** {
 257:../../tmk_core/protocol/lufa/descriptor.c ****     .Config =
 258:../../tmk_core/protocol/lufa/descriptor.c ****         {
 259:../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Configuration_Header_t), .Type
 260:../../tmk_core/protocol/lufa/descriptor.c **** 
 261:../../tmk_core/protocol/lufa/descriptor.c ****             .TotalConfigurationSize = sizeof(USB_Descriptor_Configuration_t),
 262:../../tmk_core/protocol/lufa/descriptor.c ****             .TotalInterfaces        = TOTAL_INTERFACES,
 263:../../tmk_core/protocol/lufa/descriptor.c **** 
 264:../../tmk_core/protocol/lufa/descriptor.c ****             .ConfigurationNumber    = 1,
 265:../../tmk_core/protocol/lufa/descriptor.c ****             .ConfigurationStrIndex  = NO_DESCRIPTOR,
 266:../../tmk_core/protocol/lufa/descriptor.c **** 
 267:../../tmk_core/protocol/lufa/descriptor.c ****             .ConfigAttributes       = (USB_CONFIG_ATTR_RESERVED | USB_CONFIG_ATTR_REMOTEWAKEUP),
 268:../../tmk_core/protocol/lufa/descriptor.c **** 
 269:../../tmk_core/protocol/lufa/descriptor.c ****             .MaxPowerConsumption    = USB_CONFIG_POWER_MA(500)
 270:../../tmk_core/protocol/lufa/descriptor.c ****         },
 271:../../tmk_core/protocol/lufa/descriptor.c **** 
 272:../../tmk_core/protocol/lufa/descriptor.c ****     /*
 273:../../tmk_core/protocol/lufa/descriptor.c ****      * Keyboard
 274:../../tmk_core/protocol/lufa/descriptor.c ****      */
 275:../../tmk_core/protocol/lufa/descriptor.c ****     .Keyboard_Interface =
 276:../../tmk_core/protocol/lufa/descriptor.c ****         {
 277:../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Interface_t), .Type = DTYPE_In
 278:../../tmk_core/protocol/lufa/descriptor.c **** 
 279:../../tmk_core/protocol/lufa/descriptor.c ****             .InterfaceNumber        = KEYBOARD_INTERFACE,
 280:../../tmk_core/protocol/lufa/descriptor.c ****             .AlternateSetting       = 0x00,
 281:../../tmk_core/protocol/lufa/descriptor.c **** 
 282:../../tmk_core/protocol/lufa/descriptor.c ****             .TotalEndpoints         = 1,
 283:../../tmk_core/protocol/lufa/descriptor.c **** 
 284:../../tmk_core/protocol/lufa/descriptor.c ****             .Class                  = HID_CSCP_HIDClass,
 285:../../tmk_core/protocol/lufa/descriptor.c ****             .SubClass               = HID_CSCP_BootSubclass,
 286:../../tmk_core/protocol/lufa/descriptor.c ****             .Protocol               = HID_CSCP_KeyboardBootProtocol,
 287:../../tmk_core/protocol/lufa/descriptor.c **** 
 288:../../tmk_core/protocol/lufa/descriptor.c ****             .InterfaceStrIndex      = NO_DESCRIPTOR
 289:../../tmk_core/protocol/lufa/descriptor.c ****         },
 290:../../tmk_core/protocol/lufa/descriptor.c **** 
 291:../../tmk_core/protocol/lufa/descriptor.c ****     .Keyboard_HID =
 292:../../tmk_core/protocol/lufa/descriptor.c ****         {
 293:../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_HID_Descriptor_HID_t), .Type = HID_DTYPE_
 294:../../tmk_core/protocol/lufa/descriptor.c **** 
 295:../../tmk_core/protocol/lufa/descriptor.c ****             .HIDSpec                = VERSION_BCD(1,1,1),
 296:../../tmk_core/protocol/lufa/descriptor.c ****             .CountryCode            = 0x00,
 297:../../tmk_core/protocol/lufa/descriptor.c ****             .TotalReportDescriptors = 1,
 298:../../tmk_core/protocol/lufa/descriptor.c ****             .HIDReportType          = HID_DTYPE_Report,
 299:../../tmk_core/protocol/lufa/descriptor.c ****             .HIDReportLength        = sizeof(KeyboardReport)
 300:../../tmk_core/protocol/lufa/descriptor.c ****         },
 301:../../tmk_core/protocol/lufa/descriptor.c **** 
 302:../../tmk_core/protocol/lufa/descriptor.c ****     .Keyboard_INEndpoint =
 303:../../tmk_core/protocol/lufa/descriptor.c ****         {
 304:../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Endpoint_t), .Type = DTYPE_End
 305:../../tmk_core/protocol/lufa/descriptor.c **** 
 306:../../tmk_core/protocol/lufa/descriptor.c ****             .EndpointAddress        = (ENDPOINT_DIR_IN | KEYBOARD_IN_EPNUM),
 307:../../tmk_core/protocol/lufa/descriptor.c ****             .Attributes             = (EP_TYPE_INTERRUPT | ENDPOINT_ATTR_NO_SYNC | ENDPOINT_USAGE_D
 308:../../tmk_core/protocol/lufa/descriptor.c ****             .EndpointSize           = KEYBOARD_EPSIZE,
 309:../../tmk_core/protocol/lufa/descriptor.c ****             .PollingIntervalMS      = 0x0A
 310:../../tmk_core/protocol/lufa/descriptor.c ****         },
 311:../../tmk_core/protocol/lufa/descriptor.c **** 
 312:../../tmk_core/protocol/lufa/descriptor.c ****     /*
 313:../../tmk_core/protocol/lufa/descriptor.c ****      * Mouse
 314:../../tmk_core/protocol/lufa/descriptor.c ****      */
 315:../../tmk_core/protocol/lufa/descriptor.c **** #ifdef MOUSE_ENABLE
 316:../../tmk_core/protocol/lufa/descriptor.c ****     .Mouse_Interface =
 317:../../tmk_core/protocol/lufa/descriptor.c ****         {
 318:../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Interface_t), .Type = DTYPE_In
 319:../../tmk_core/protocol/lufa/descriptor.c **** 
 320:../../tmk_core/protocol/lufa/descriptor.c ****             .InterfaceNumber        = MOUSE_INTERFACE,
 321:../../tmk_core/protocol/lufa/descriptor.c ****             .AlternateSetting       = 0x00,
 322:../../tmk_core/protocol/lufa/descriptor.c **** 
 323:../../tmk_core/protocol/lufa/descriptor.c ****             .TotalEndpoints         = 1,
 324:../../tmk_core/protocol/lufa/descriptor.c **** 
 325:../../tmk_core/protocol/lufa/descriptor.c ****             .Class                  = HID_CSCP_HIDClass,
 326:../../tmk_core/protocol/lufa/descriptor.c ****             .SubClass               = HID_CSCP_BootSubclass,
 327:../../tmk_core/protocol/lufa/descriptor.c ****             .Protocol               = HID_CSCP_MouseBootProtocol,
 328:../../tmk_core/protocol/lufa/descriptor.c **** 
 329:../../tmk_core/protocol/lufa/descriptor.c ****             .InterfaceStrIndex      = NO_DESCRIPTOR
 330:../../tmk_core/protocol/lufa/descriptor.c ****         },
 331:../../tmk_core/protocol/lufa/descriptor.c **** 
 332:../../tmk_core/protocol/lufa/descriptor.c ****     .Mouse_HID =
 333:../../tmk_core/protocol/lufa/descriptor.c ****         {
 334:../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_HID_Descriptor_HID_t), .Type = HID_DTYPE_
 335:../../tmk_core/protocol/lufa/descriptor.c **** 
 336:../../tmk_core/protocol/lufa/descriptor.c ****             .HIDSpec                = VERSION_BCD(1,1,1),
 337:../../tmk_core/protocol/lufa/descriptor.c ****             .CountryCode            = 0x00,
 338:../../tmk_core/protocol/lufa/descriptor.c ****             .TotalReportDescriptors = 1,
 339:../../tmk_core/protocol/lufa/descriptor.c ****             .HIDReportType          = HID_DTYPE_Report,
 340:../../tmk_core/protocol/lufa/descriptor.c ****             .HIDReportLength        = sizeof(MouseReport)
 341:../../tmk_core/protocol/lufa/descriptor.c ****         },
 342:../../tmk_core/protocol/lufa/descriptor.c **** 
 343:../../tmk_core/protocol/lufa/descriptor.c ****     .Mouse_INEndpoint =
 344:../../tmk_core/protocol/lufa/descriptor.c ****         {
 345:../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Endpoint_t), .Type = DTYPE_End
 346:../../tmk_core/protocol/lufa/descriptor.c **** 
 347:../../tmk_core/protocol/lufa/descriptor.c ****             .EndpointAddress        = (ENDPOINT_DIR_IN | MOUSE_IN_EPNUM),
 348:../../tmk_core/protocol/lufa/descriptor.c ****             .Attributes             = (EP_TYPE_INTERRUPT | ENDPOINT_ATTR_NO_SYNC | ENDPOINT_USAGE_D
 349:../../tmk_core/protocol/lufa/descriptor.c ****             .EndpointSize           = MOUSE_EPSIZE,
 350:../../tmk_core/protocol/lufa/descriptor.c ****             .PollingIntervalMS      = 0x0A
 351:../../tmk_core/protocol/lufa/descriptor.c ****         },
 352:../../tmk_core/protocol/lufa/descriptor.c **** #endif
 353:../../tmk_core/protocol/lufa/descriptor.c **** 
 354:../../tmk_core/protocol/lufa/descriptor.c ****     /*
 355:../../tmk_core/protocol/lufa/descriptor.c ****      * Extra
 356:../../tmk_core/protocol/lufa/descriptor.c ****      */
 357:../../tmk_core/protocol/lufa/descriptor.c **** #ifdef EXTRAKEY_ENABLE
 358:../../tmk_core/protocol/lufa/descriptor.c ****     .Extrakey_Interface =
 359:../../tmk_core/protocol/lufa/descriptor.c ****         {
 360:../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Interface_t), .Type = DTYPE_In
 361:../../tmk_core/protocol/lufa/descriptor.c **** 
 362:../../tmk_core/protocol/lufa/descriptor.c ****             .InterfaceNumber        = EXTRAKEY_INTERFACE,
 363:../../tmk_core/protocol/lufa/descriptor.c ****             .AlternateSetting       = 0x00,
 364:../../tmk_core/protocol/lufa/descriptor.c **** 
 365:../../tmk_core/protocol/lufa/descriptor.c ****             .TotalEndpoints         = 1,
 366:../../tmk_core/protocol/lufa/descriptor.c **** 
 367:../../tmk_core/protocol/lufa/descriptor.c ****             .Class                  = HID_CSCP_HIDClass,
 368:../../tmk_core/protocol/lufa/descriptor.c ****             .SubClass               = HID_CSCP_NonBootSubclass,
 369:../../tmk_core/protocol/lufa/descriptor.c ****             .Protocol               = HID_CSCP_NonBootProtocol,
 370:../../tmk_core/protocol/lufa/descriptor.c **** 
 371:../../tmk_core/protocol/lufa/descriptor.c ****             .InterfaceStrIndex      = NO_DESCRIPTOR
 372:../../tmk_core/protocol/lufa/descriptor.c ****         },
 373:../../tmk_core/protocol/lufa/descriptor.c **** 
 374:../../tmk_core/protocol/lufa/descriptor.c ****     .Extrakey_HID =
 375:../../tmk_core/protocol/lufa/descriptor.c ****         {
 376:../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_HID_Descriptor_HID_t), .Type = HID_DTYPE_
 377:../../tmk_core/protocol/lufa/descriptor.c **** 
 378:../../tmk_core/protocol/lufa/descriptor.c ****             .HIDSpec                = VERSION_BCD(1,1,1),
 379:../../tmk_core/protocol/lufa/descriptor.c ****             .CountryCode            = 0x00,
 380:../../tmk_core/protocol/lufa/descriptor.c ****             .TotalReportDescriptors = 1,
 381:../../tmk_core/protocol/lufa/descriptor.c ****             .HIDReportType          = HID_DTYPE_Report,
 382:../../tmk_core/protocol/lufa/descriptor.c ****             .HIDReportLength        = sizeof(ExtrakeyReport)
 383:../../tmk_core/protocol/lufa/descriptor.c ****         },
 384:../../tmk_core/protocol/lufa/descriptor.c **** 
 385:../../tmk_core/protocol/lufa/descriptor.c ****     .Extrakey_INEndpoint =
 386:../../tmk_core/protocol/lufa/descriptor.c ****         {
 387:../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Endpoint_t), .Type = DTYPE_End
 388:../../tmk_core/protocol/lufa/descriptor.c **** 
 389:../../tmk_core/protocol/lufa/descriptor.c ****             .EndpointAddress        = (ENDPOINT_DIR_IN | EXTRAKEY_IN_EPNUM),
 390:../../tmk_core/protocol/lufa/descriptor.c ****             .Attributes             = (EP_TYPE_INTERRUPT | ENDPOINT_ATTR_NO_SYNC | ENDPOINT_USAGE_D
 391:../../tmk_core/protocol/lufa/descriptor.c ****             .EndpointSize           = EXTRAKEY_EPSIZE,
 392:../../tmk_core/protocol/lufa/descriptor.c ****             .PollingIntervalMS      = 0x0A
 393:../../tmk_core/protocol/lufa/descriptor.c ****         },
 394:../../tmk_core/protocol/lufa/descriptor.c **** #endif
 395:../../tmk_core/protocol/lufa/descriptor.c **** 
 396:../../tmk_core/protocol/lufa/descriptor.c ****     /*
 397:../../tmk_core/protocol/lufa/descriptor.c ****      * Console
 398:../../tmk_core/protocol/lufa/descriptor.c ****      */
 399:../../tmk_core/protocol/lufa/descriptor.c **** #ifdef CONSOLE_ENABLE
 400:../../tmk_core/protocol/lufa/descriptor.c ****     .Console_Interface =
 401:../../tmk_core/protocol/lufa/descriptor.c ****         {
 402:../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Interface_t), .Type = DTYPE_In
 403:../../tmk_core/protocol/lufa/descriptor.c **** 
 404:../../tmk_core/protocol/lufa/descriptor.c ****             .InterfaceNumber        = CONSOLE_INTERFACE,
 405:../../tmk_core/protocol/lufa/descriptor.c ****             .AlternateSetting       = 0x00,
 406:../../tmk_core/protocol/lufa/descriptor.c **** 
 407:../../tmk_core/protocol/lufa/descriptor.c ****             .TotalEndpoints         = 2,
 408:../../tmk_core/protocol/lufa/descriptor.c **** 
 409:../../tmk_core/protocol/lufa/descriptor.c ****             .Class                  = HID_CSCP_HIDClass,
 410:../../tmk_core/protocol/lufa/descriptor.c ****             .SubClass               = HID_CSCP_NonBootSubclass,
 411:../../tmk_core/protocol/lufa/descriptor.c ****             .Protocol               = HID_CSCP_NonBootProtocol,
 412:../../tmk_core/protocol/lufa/descriptor.c **** 
 413:../../tmk_core/protocol/lufa/descriptor.c ****             .InterfaceStrIndex      = NO_DESCRIPTOR
 414:../../tmk_core/protocol/lufa/descriptor.c ****         },
 415:../../tmk_core/protocol/lufa/descriptor.c **** 
 416:../../tmk_core/protocol/lufa/descriptor.c ****     .Console_HID =
 417:../../tmk_core/protocol/lufa/descriptor.c ****         {
 418:../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_HID_Descriptor_HID_t), .Type = HID_DTYPE_
 419:../../tmk_core/protocol/lufa/descriptor.c **** 
 420:../../tmk_core/protocol/lufa/descriptor.c ****             .HIDSpec                = VERSION_BCD(1,1,1),
 421:../../tmk_core/protocol/lufa/descriptor.c ****             .CountryCode            = 0x00,
 422:../../tmk_core/protocol/lufa/descriptor.c ****             .TotalReportDescriptors = 1,
 423:../../tmk_core/protocol/lufa/descriptor.c ****             .HIDReportType          = HID_DTYPE_Report,
 424:../../tmk_core/protocol/lufa/descriptor.c ****             .HIDReportLength        = sizeof(ConsoleReport)
 425:../../tmk_core/protocol/lufa/descriptor.c ****         },
 426:../../tmk_core/protocol/lufa/descriptor.c **** 
 427:../../tmk_core/protocol/lufa/descriptor.c ****     .Console_INEndpoint =
 428:../../tmk_core/protocol/lufa/descriptor.c ****         {
 429:../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Endpoint_t), .Type = DTYPE_End
 430:../../tmk_core/protocol/lufa/descriptor.c **** 
 431:../../tmk_core/protocol/lufa/descriptor.c ****             .EndpointAddress        = (ENDPOINT_DIR_IN | CONSOLE_IN_EPNUM),
 432:../../tmk_core/protocol/lufa/descriptor.c ****             .Attributes             = (EP_TYPE_INTERRUPT | ENDPOINT_ATTR_NO_SYNC | ENDPOINT_USAGE_D
 433:../../tmk_core/protocol/lufa/descriptor.c ****             .EndpointSize           = CONSOLE_EPSIZE,
 434:../../tmk_core/protocol/lufa/descriptor.c ****             .PollingIntervalMS      = 0x01
 435:../../tmk_core/protocol/lufa/descriptor.c ****         },
 436:../../tmk_core/protocol/lufa/descriptor.c **** 
 437:../../tmk_core/protocol/lufa/descriptor.c ****     .Console_OUTEndpoint =
 438:../../tmk_core/protocol/lufa/descriptor.c ****         {
 439:../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Endpoint_t), .Type = DTYPE_End
 440:../../tmk_core/protocol/lufa/descriptor.c **** 
 441:../../tmk_core/protocol/lufa/descriptor.c ****             .EndpointAddress        = (ENDPOINT_DIR_OUT | CONSOLE_OUT_EPNUM),
 442:../../tmk_core/protocol/lufa/descriptor.c ****             .Attributes             = (EP_TYPE_INTERRUPT | ENDPOINT_ATTR_NO_SYNC | ENDPOINT_USAGE_D
 443:../../tmk_core/protocol/lufa/descriptor.c ****             .EndpointSize           = CONSOLE_EPSIZE,
 444:../../tmk_core/protocol/lufa/descriptor.c ****             .PollingIntervalMS      = 0x01
 445:../../tmk_core/protocol/lufa/descriptor.c ****         },
 446:../../tmk_core/protocol/lufa/descriptor.c **** #endif
 447:../../tmk_core/protocol/lufa/descriptor.c **** 
 448:../../tmk_core/protocol/lufa/descriptor.c ****     /*
 449:../../tmk_core/protocol/lufa/descriptor.c ****      * NKRO
 450:../../tmk_core/protocol/lufa/descriptor.c ****      */
 451:../../tmk_core/protocol/lufa/descriptor.c **** #ifdef NKRO_ENABLE
 452:../../tmk_core/protocol/lufa/descriptor.c ****     .NKRO_Interface =
 453:../../tmk_core/protocol/lufa/descriptor.c ****         {
 454:../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Interface_t), .Type = DTYPE_In
 455:../../tmk_core/protocol/lufa/descriptor.c **** 
 456:../../tmk_core/protocol/lufa/descriptor.c ****             .InterfaceNumber        = NKRO_INTERFACE,
 457:../../tmk_core/protocol/lufa/descriptor.c ****             .AlternateSetting       = 0x00,
 458:../../tmk_core/protocol/lufa/descriptor.c **** 
 459:../../tmk_core/protocol/lufa/descriptor.c ****             .TotalEndpoints         = 1,
 460:../../tmk_core/protocol/lufa/descriptor.c **** 
 461:../../tmk_core/protocol/lufa/descriptor.c ****             .Class                  = HID_CSCP_HIDClass,
 462:../../tmk_core/protocol/lufa/descriptor.c ****             .SubClass               = HID_CSCP_NonBootSubclass,
 463:../../tmk_core/protocol/lufa/descriptor.c ****             .Protocol               = HID_CSCP_NonBootProtocol,
 464:../../tmk_core/protocol/lufa/descriptor.c **** 
 465:../../tmk_core/protocol/lufa/descriptor.c ****             .InterfaceStrIndex      = NO_DESCRIPTOR
 466:../../tmk_core/protocol/lufa/descriptor.c ****         },
 467:../../tmk_core/protocol/lufa/descriptor.c **** 
 468:../../tmk_core/protocol/lufa/descriptor.c ****     .NKRO_HID =
 469:../../tmk_core/protocol/lufa/descriptor.c ****         {
 470:../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_HID_Descriptor_HID_t), .Type = HID_DTYPE_
 471:../../tmk_core/protocol/lufa/descriptor.c **** 
 472:../../tmk_core/protocol/lufa/descriptor.c ****             .HIDSpec                = VERSION_BCD(1,1,1),
 473:../../tmk_core/protocol/lufa/descriptor.c ****             .CountryCode            = 0x00,
 474:../../tmk_core/protocol/lufa/descriptor.c ****             .TotalReportDescriptors = 1,
 475:../../tmk_core/protocol/lufa/descriptor.c ****             .HIDReportType          = HID_DTYPE_Report,
 476:../../tmk_core/protocol/lufa/descriptor.c ****             .HIDReportLength        = sizeof(NKROReport)
 477:../../tmk_core/protocol/lufa/descriptor.c ****         },
 478:../../tmk_core/protocol/lufa/descriptor.c **** 
 479:../../tmk_core/protocol/lufa/descriptor.c ****     .NKRO_INEndpoint =
 480:../../tmk_core/protocol/lufa/descriptor.c ****         {
 481:../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Endpoint_t), .Type = DTYPE_End
 482:../../tmk_core/protocol/lufa/descriptor.c **** 
 483:../../tmk_core/protocol/lufa/descriptor.c ****             .EndpointAddress        = (ENDPOINT_DIR_IN | NKRO_IN_EPNUM),
 484:../../tmk_core/protocol/lufa/descriptor.c ****             .Attributes             = (EP_TYPE_INTERRUPT | ENDPOINT_ATTR_NO_SYNC | ENDPOINT_USAGE_D
 485:../../tmk_core/protocol/lufa/descriptor.c ****             .EndpointSize           = NKRO_EPSIZE,
 486:../../tmk_core/protocol/lufa/descriptor.c ****             .PollingIntervalMS      = 0x01
 487:../../tmk_core/protocol/lufa/descriptor.c ****         },
 488:../../tmk_core/protocol/lufa/descriptor.c **** #endif
 489:../../tmk_core/protocol/lufa/descriptor.c **** 
 490:../../tmk_core/protocol/lufa/descriptor.c **** #ifdef MIDI_ENABLE
 491:../../tmk_core/protocol/lufa/descriptor.c ****     .Audio_ControlInterface =
 492:../../tmk_core/protocol/lufa/descriptor.c ****         {
 493:../../tmk_core/protocol/lufa/descriptor.c ****             .Header                   = {.Size = sizeof(USB_Descriptor_Interface_t), .Type = DTYPE_
 494:../../tmk_core/protocol/lufa/descriptor.c **** 
 495:../../tmk_core/protocol/lufa/descriptor.c ****             .InterfaceNumber          = AC_INTERFACE,
 496:../../tmk_core/protocol/lufa/descriptor.c ****             .AlternateSetting         = 0,
 497:../../tmk_core/protocol/lufa/descriptor.c **** 
 498:../../tmk_core/protocol/lufa/descriptor.c ****             .TotalEndpoints           = 0,
 499:../../tmk_core/protocol/lufa/descriptor.c **** 
 500:../../tmk_core/protocol/lufa/descriptor.c ****             .Class                    = AUDIO_CSCP_AudioClass,
 501:../../tmk_core/protocol/lufa/descriptor.c ****             .SubClass                 = AUDIO_CSCP_ControlSubclass,
 502:../../tmk_core/protocol/lufa/descriptor.c ****             .Protocol                 = AUDIO_CSCP_ControlProtocol,
 503:../../tmk_core/protocol/lufa/descriptor.c **** 
 504:../../tmk_core/protocol/lufa/descriptor.c ****             .InterfaceStrIndex        = NO_DESCRIPTOR
 505:../../tmk_core/protocol/lufa/descriptor.c ****         },
 506:../../tmk_core/protocol/lufa/descriptor.c **** 
 507:../../tmk_core/protocol/lufa/descriptor.c ****     .Audio_ControlInterface_SPC =
 508:../../tmk_core/protocol/lufa/descriptor.c ****         {
 509:../../tmk_core/protocol/lufa/descriptor.c ****             .Header                   = {.Size = sizeof(USB_Audio_Descriptor_Interface_AC_t), .Type
 510:../../tmk_core/protocol/lufa/descriptor.c ****             .Subtype                  = AUDIO_DSUBTYPE_CSInterface_Header,
 511:../../tmk_core/protocol/lufa/descriptor.c **** 
 512:../../tmk_core/protocol/lufa/descriptor.c ****             .ACSpecification          = VERSION_BCD(1,0,0),
 513:../../tmk_core/protocol/lufa/descriptor.c ****             .TotalLength              = sizeof(USB_Audio_Descriptor_Interface_AC_t),
 514:../../tmk_core/protocol/lufa/descriptor.c **** 
 515:../../tmk_core/protocol/lufa/descriptor.c ****             .InCollection             = 1,
 516:../../tmk_core/protocol/lufa/descriptor.c ****             .InterfaceNumber          = AS_INTERFACE,
 517:../../tmk_core/protocol/lufa/descriptor.c ****         },
 518:../../tmk_core/protocol/lufa/descriptor.c **** 
 519:../../tmk_core/protocol/lufa/descriptor.c ****     .Audio_StreamInterface =
 520:../../tmk_core/protocol/lufa/descriptor.c ****         {
 521:../../tmk_core/protocol/lufa/descriptor.c ****             .Header                   = {.Size = sizeof(USB_Descriptor_Interface_t), .Type = DTYPE_
 522:../../tmk_core/protocol/lufa/descriptor.c **** 
 523:../../tmk_core/protocol/lufa/descriptor.c ****             .InterfaceNumber          = AS_INTERFACE,
 524:../../tmk_core/protocol/lufa/descriptor.c ****             .AlternateSetting         = 0,
 525:../../tmk_core/protocol/lufa/descriptor.c **** 
 526:../../tmk_core/protocol/lufa/descriptor.c ****             .TotalEndpoints           = 2,
 527:../../tmk_core/protocol/lufa/descriptor.c **** 
 528:../../tmk_core/protocol/lufa/descriptor.c ****             .Class                    = AUDIO_CSCP_AudioClass,
 529:../../tmk_core/protocol/lufa/descriptor.c ****             .SubClass                 = AUDIO_CSCP_MIDIStreamingSubclass,
 530:../../tmk_core/protocol/lufa/descriptor.c ****             .Protocol                 = AUDIO_CSCP_StreamingProtocol,
 531:../../tmk_core/protocol/lufa/descriptor.c **** 
 532:../../tmk_core/protocol/lufa/descriptor.c ****             .InterfaceStrIndex        = NO_DESCRIPTOR
 533:../../tmk_core/protocol/lufa/descriptor.c ****         },
 534:../../tmk_core/protocol/lufa/descriptor.c **** 
 535:../../tmk_core/protocol/lufa/descriptor.c ****     .Audio_StreamInterface_SPC =
 536:../../tmk_core/protocol/lufa/descriptor.c ****         {
 537:../../tmk_core/protocol/lufa/descriptor.c ****             .Header                   = {.Size = sizeof(USB_MIDI_Descriptor_AudioInterface_AS_t), .
 538:../../tmk_core/protocol/lufa/descriptor.c ****             .Subtype                  = AUDIO_DSUBTYPE_CSInterface_General,
 539:../../tmk_core/protocol/lufa/descriptor.c **** 
 540:../../tmk_core/protocol/lufa/descriptor.c ****             .AudioSpecification       = VERSION_BCD(1,0,0),
 541:../../tmk_core/protocol/lufa/descriptor.c **** 
 542:../../tmk_core/protocol/lufa/descriptor.c ****             .TotalLength              = (sizeof(USB_Descriptor_Configuration_t) -
 543:../../tmk_core/protocol/lufa/descriptor.c ****                                          offsetof(USB_Descriptor_Configuration_t, Audio_StreamInter
 544:../../tmk_core/protocol/lufa/descriptor.c ****         },
 545:../../tmk_core/protocol/lufa/descriptor.c **** 
 546:../../tmk_core/protocol/lufa/descriptor.c ****     .MIDI_In_Jack_Emb =
 547:../../tmk_core/protocol/lufa/descriptor.c ****         {
 548:../../tmk_core/protocol/lufa/descriptor.c ****             .Header                   = {.Size = sizeof(USB_MIDI_Descriptor_InputJack_t), .Type = D
 549:../../tmk_core/protocol/lufa/descriptor.c ****             .Subtype                  = AUDIO_DSUBTYPE_CSInterface_InputTerminal,
 550:../../tmk_core/protocol/lufa/descriptor.c **** 
 551:../../tmk_core/protocol/lufa/descriptor.c ****             .JackType                 = MIDI_JACKTYPE_Embedded,
 552:../../tmk_core/protocol/lufa/descriptor.c ****             .JackID                   = 0x01,
 553:../../tmk_core/protocol/lufa/descriptor.c **** 
 554:../../tmk_core/protocol/lufa/descriptor.c ****             .JackStrIndex             = NO_DESCRIPTOR
 555:../../tmk_core/protocol/lufa/descriptor.c ****         },
 556:../../tmk_core/protocol/lufa/descriptor.c **** 
 557:../../tmk_core/protocol/lufa/descriptor.c ****     .MIDI_In_Jack_Ext =
 558:../../tmk_core/protocol/lufa/descriptor.c ****         {
 559:../../tmk_core/protocol/lufa/descriptor.c ****             .Header                   = {.Size = sizeof(USB_MIDI_Descriptor_InputJack_t), .Type = D
 560:../../tmk_core/protocol/lufa/descriptor.c ****             .Subtype                  = AUDIO_DSUBTYPE_CSInterface_InputTerminal,
 561:../../tmk_core/protocol/lufa/descriptor.c **** 
 562:../../tmk_core/protocol/lufa/descriptor.c ****             .JackType                 = MIDI_JACKTYPE_External,
 563:../../tmk_core/protocol/lufa/descriptor.c ****             .JackID                   = 0x02,
 564:../../tmk_core/protocol/lufa/descriptor.c **** 
 565:../../tmk_core/protocol/lufa/descriptor.c ****             .JackStrIndex             = NO_DESCRIPTOR
 566:../../tmk_core/protocol/lufa/descriptor.c ****         },
 567:../../tmk_core/protocol/lufa/descriptor.c **** 
 568:../../tmk_core/protocol/lufa/descriptor.c ****     .MIDI_Out_Jack_Emb =
 569:../../tmk_core/protocol/lufa/descriptor.c ****         {
 570:../../tmk_core/protocol/lufa/descriptor.c ****             .Header                   = {.Size = sizeof(USB_MIDI_Descriptor_OutputJack_t), .Type = 
 571:../../tmk_core/protocol/lufa/descriptor.c ****             .Subtype                  = AUDIO_DSUBTYPE_CSInterface_OutputTerminal,
 572:../../tmk_core/protocol/lufa/descriptor.c **** 
 573:../../tmk_core/protocol/lufa/descriptor.c ****             .JackType                 = MIDI_JACKTYPE_Embedded,
 574:../../tmk_core/protocol/lufa/descriptor.c ****             .JackID                   = 0x03,
 575:../../tmk_core/protocol/lufa/descriptor.c **** 
 576:../../tmk_core/protocol/lufa/descriptor.c ****             .NumberOfPins             = 1,
 577:../../tmk_core/protocol/lufa/descriptor.c ****             .SourceJackID             = {0x02},
 578:../../tmk_core/protocol/lufa/descriptor.c ****             .SourcePinID              = {0x01},
 579:../../tmk_core/protocol/lufa/descriptor.c **** 
 580:../../tmk_core/protocol/lufa/descriptor.c ****             .JackStrIndex             = NO_DESCRIPTOR
 581:../../tmk_core/protocol/lufa/descriptor.c ****         },
 582:../../tmk_core/protocol/lufa/descriptor.c **** 
 583:../../tmk_core/protocol/lufa/descriptor.c ****     .MIDI_Out_Jack_Ext =
 584:../../tmk_core/protocol/lufa/descriptor.c ****         {
 585:../../tmk_core/protocol/lufa/descriptor.c ****             .Header                   = {.Size = sizeof(USB_MIDI_Descriptor_OutputJack_t), .Type = 
 586:../../tmk_core/protocol/lufa/descriptor.c ****             .Subtype                  = AUDIO_DSUBTYPE_CSInterface_OutputTerminal,
 587:../../tmk_core/protocol/lufa/descriptor.c **** 
 588:../../tmk_core/protocol/lufa/descriptor.c ****             .JackType                 = MIDI_JACKTYPE_External,
 589:../../tmk_core/protocol/lufa/descriptor.c ****             .JackID                   = 0x04,
 590:../../tmk_core/protocol/lufa/descriptor.c **** 
 591:../../tmk_core/protocol/lufa/descriptor.c ****             .NumberOfPins             = 1,
 592:../../tmk_core/protocol/lufa/descriptor.c ****             .SourceJackID             = {0x01},
 593:../../tmk_core/protocol/lufa/descriptor.c ****             .SourcePinID              = {0x01},
 594:../../tmk_core/protocol/lufa/descriptor.c **** 
 595:../../tmk_core/protocol/lufa/descriptor.c ****             .JackStrIndex             = NO_DESCRIPTOR
 596:../../tmk_core/protocol/lufa/descriptor.c ****         },
 597:../../tmk_core/protocol/lufa/descriptor.c **** 
 598:../../tmk_core/protocol/lufa/descriptor.c ****     .MIDI_In_Jack_Endpoint =
 599:../../tmk_core/protocol/lufa/descriptor.c ****         {
 600:../../tmk_core/protocol/lufa/descriptor.c ****             .Endpoint =
 601:../../tmk_core/protocol/lufa/descriptor.c ****                 {
 602:../../tmk_core/protocol/lufa/descriptor.c ****                     .Header              = {.Size = sizeof(USB_Audio_Descriptor_StreamEndpoint_Std_
 603:../../tmk_core/protocol/lufa/descriptor.c **** 
 604:../../tmk_core/protocol/lufa/descriptor.c ****                     .EndpointAddress     = MIDI_STREAM_OUT_EPADDR,
 605:../../tmk_core/protocol/lufa/descriptor.c ****                     .Attributes          = (EP_TYPE_BULK | ENDPOINT_ATTR_NO_SYNC | ENDPOINT_USAGE_D
 606:../../tmk_core/protocol/lufa/descriptor.c ****                     .EndpointSize        = MIDI_STREAM_EPSIZE,
 607:../../tmk_core/protocol/lufa/descriptor.c ****                     .PollingIntervalMS   = 0x05
 608:../../tmk_core/protocol/lufa/descriptor.c ****                 },
 609:../../tmk_core/protocol/lufa/descriptor.c **** 
 610:../../tmk_core/protocol/lufa/descriptor.c ****             .Refresh                  = 0,
 611:../../tmk_core/protocol/lufa/descriptor.c ****             .SyncEndpointNumber       = 0
 612:../../tmk_core/protocol/lufa/descriptor.c ****         },
 613:../../tmk_core/protocol/lufa/descriptor.c **** 
 614:../../tmk_core/protocol/lufa/descriptor.c ****     .MIDI_In_Jack_Endpoint_SPC =
 615:../../tmk_core/protocol/lufa/descriptor.c ****         {
 616:../../tmk_core/protocol/lufa/descriptor.c ****             .Header                   = {.Size = sizeof(USB_MIDI_Descriptor_Jack_Endpoint_t), .Type
 617:../../tmk_core/protocol/lufa/descriptor.c ****             .Subtype                  = AUDIO_DSUBTYPE_CSEndpoint_General,
 618:../../tmk_core/protocol/lufa/descriptor.c **** 
 619:../../tmk_core/protocol/lufa/descriptor.c ****             .TotalEmbeddedJacks       = 0x01,
 620:../../tmk_core/protocol/lufa/descriptor.c ****             .AssociatedJackID         = {0x01}
 621:../../tmk_core/protocol/lufa/descriptor.c ****         },
 622:../../tmk_core/protocol/lufa/descriptor.c **** 
 623:../../tmk_core/protocol/lufa/descriptor.c ****     .MIDI_Out_Jack_Endpoint =
 624:../../tmk_core/protocol/lufa/descriptor.c ****         {
 625:../../tmk_core/protocol/lufa/descriptor.c ****             .Endpoint =
 626:../../tmk_core/protocol/lufa/descriptor.c ****                 {
 627:../../tmk_core/protocol/lufa/descriptor.c ****                     .Header              = {.Size = sizeof(USB_Audio_Descriptor_StreamEndpoint_Std_
 628:../../tmk_core/protocol/lufa/descriptor.c **** 
 629:../../tmk_core/protocol/lufa/descriptor.c ****                     .EndpointAddress     = MIDI_STREAM_IN_EPADDR,
 630:../../tmk_core/protocol/lufa/descriptor.c ****                     .Attributes          = (EP_TYPE_BULK | ENDPOINT_ATTR_NO_SYNC | ENDPOINT_USAGE_D
 631:../../tmk_core/protocol/lufa/descriptor.c ****                     .EndpointSize        = MIDI_STREAM_EPSIZE,
 632:../../tmk_core/protocol/lufa/descriptor.c ****                     .PollingIntervalMS   = 0x05
 633:../../tmk_core/protocol/lufa/descriptor.c ****                 },
 634:../../tmk_core/protocol/lufa/descriptor.c **** 
 635:../../tmk_core/protocol/lufa/descriptor.c ****             .Refresh                  = 0,
 636:../../tmk_core/protocol/lufa/descriptor.c ****             .SyncEndpointNumber       = 0
 637:../../tmk_core/protocol/lufa/descriptor.c ****         },
 638:../../tmk_core/protocol/lufa/descriptor.c **** 
 639:../../tmk_core/protocol/lufa/descriptor.c ****     .MIDI_Out_Jack_Endpoint_SPC =
 640:../../tmk_core/protocol/lufa/descriptor.c ****         {
 641:../../tmk_core/protocol/lufa/descriptor.c ****             .Header                   = {.Size = sizeof(USB_MIDI_Descriptor_Jack_Endpoint_t), .Type
 642:../../tmk_core/protocol/lufa/descriptor.c ****             .Subtype                  = AUDIO_DSUBTYPE_CSEndpoint_General,
 643:../../tmk_core/protocol/lufa/descriptor.c **** 
 644:../../tmk_core/protocol/lufa/descriptor.c ****             .TotalEmbeddedJacks       = 0x01,
 645:../../tmk_core/protocol/lufa/descriptor.c ****             .AssociatedJackID         = {0x03}
 646:../../tmk_core/protocol/lufa/descriptor.c ****         }
 647:../../tmk_core/protocol/lufa/descriptor.c **** #endif
 648:../../tmk_core/protocol/lufa/descriptor.c **** };
 649:../../tmk_core/protocol/lufa/descriptor.c **** 
 650:../../tmk_core/protocol/lufa/descriptor.c **** 
 651:../../tmk_core/protocol/lufa/descriptor.c **** /*******************************************************************************
 652:../../tmk_core/protocol/lufa/descriptor.c ****  * String Descriptors
 653:../../tmk_core/protocol/lufa/descriptor.c ****  ******************************************************************************/
 654:../../tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_String_t PROGMEM LanguageString =
 655:../../tmk_core/protocol/lufa/descriptor.c **** {
 656:../../tmk_core/protocol/lufa/descriptor.c ****     .Header                 = {.Size = USB_STRING_LEN(1), .Type = DTYPE_String},
 657:../../tmk_core/protocol/lufa/descriptor.c **** 
 658:../../tmk_core/protocol/lufa/descriptor.c ****     .UnicodeString          = {LANGUAGE_ID_ENG}
 659:../../tmk_core/protocol/lufa/descriptor.c **** };
 660:../../tmk_core/protocol/lufa/descriptor.c **** 
 661:../../tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_String_t PROGMEM ManufacturerString =
 662:../../tmk_core/protocol/lufa/descriptor.c **** {
 663:../../tmk_core/protocol/lufa/descriptor.c ****     /* subtract 1 for null terminator */
 664:../../tmk_core/protocol/lufa/descriptor.c ****     .Header                 = {.Size = USB_STRING_LEN(sizeof(STR(MANUFACTURER))-1), .Type = DTYPE_S
 665:../../tmk_core/protocol/lufa/descriptor.c **** 
 666:../../tmk_core/protocol/lufa/descriptor.c ****     .UnicodeString          = LSTR(MANUFACTURER)
 667:../../tmk_core/protocol/lufa/descriptor.c **** };
 668:../../tmk_core/protocol/lufa/descriptor.c **** 
 669:../../tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_String_t PROGMEM ProductString =
 670:../../tmk_core/protocol/lufa/descriptor.c **** {
 671:../../tmk_core/protocol/lufa/descriptor.c ****     /* subtract 1 for null terminator */
 672:../../tmk_core/protocol/lufa/descriptor.c ****     .Header                 = {.Size = USB_STRING_LEN(sizeof(STR(PRODUCT))-1), .Type = DTYPE_String
 673:../../tmk_core/protocol/lufa/descriptor.c **** 
 674:../../tmk_core/protocol/lufa/descriptor.c ****     .UnicodeString          = LSTR(PRODUCT)
 675:../../tmk_core/protocol/lufa/descriptor.c **** };
 676:../../tmk_core/protocol/lufa/descriptor.c **** 
 677:../../tmk_core/protocol/lufa/descriptor.c **** 
 678:../../tmk_core/protocol/lufa/descriptor.c **** /** This function is called by the library when in device mode, and must be overridden (see library
 679:../../tmk_core/protocol/lufa/descriptor.c ****  *  documentation) by the application code so that the address and size of a requested descriptor c
 680:../../tmk_core/protocol/lufa/descriptor.c ****  *  to the USB library. When the device receives a Get Descriptor request on the control endpoint, 
 681:../../tmk_core/protocol/lufa/descriptor.c ****  *  is called so that the descriptor details can be passed back and the appropriate descriptor sent
 682:../../tmk_core/protocol/lufa/descriptor.c ****  *  USB host.
 683:../../tmk_core/protocol/lufa/descriptor.c ****  */
 684:../../tmk_core/protocol/lufa/descriptor.c **** uint16_t CALLBACK_USB_GetDescriptor(const uint16_t wValue,
 685:../../tmk_core/protocol/lufa/descriptor.c ****                                     const uint8_t wIndex,
 686:../../tmk_core/protocol/lufa/descriptor.c ****                                     const void** const DescriptorAddress)
 687:../../tmk_core/protocol/lufa/descriptor.c **** {
  16               		.loc 1 687 0
  17               		.cfi_startproc
  18               	.LVL0:
  19               	/* prologue: function */
  20               	/* frame size = 0 */
  21               	/* stack size = 0 */
  22               	.L__stack_usage = 0
 688:../../tmk_core/protocol/lufa/descriptor.c ****     const uint8_t  DescriptorType   = (wValue >> 8);
  23               		.loc 1 688 0
  24 0000 292F      		mov r18,r25
  25 0002 3327      		clr r19
 689:../../tmk_core/protocol/lufa/descriptor.c ****     const uint8_t  DescriptorIndex  = (wValue & 0xFF);
 690:../../tmk_core/protocol/lufa/descriptor.c **** 
 691:../../tmk_core/protocol/lufa/descriptor.c ****     const void* Address = NULL;
 692:../../tmk_core/protocol/lufa/descriptor.c ****     uint16_t    Size    = NO_DESCRIPTOR;
 693:../../tmk_core/protocol/lufa/descriptor.c **** 
 694:../../tmk_core/protocol/lufa/descriptor.c ****     switch (DescriptorType)
  26               		.loc 1 694 0
  27 0004 2330      		cpi r18,3
  28 0006 3105      		cpc r19,__zero_reg__
  29 0008 01F0      		breq .L3
  30 000a 04F4      		brge .L4
  31 000c 2130      		cpi r18,1
  32 000e 3105      		cpc r19,__zero_reg__
  33 0010 01F4      		brne .+2
  34 0012 00C0      		rjmp .L12
  35 0014 2230      		cpi r18,2
  36 0016 3105      		cpc r19,__zero_reg__
  37 0018 01F0      		breq .+2
  38 001a 00C0      		rjmp .L15
  39               	.LVL1:
 695:../../tmk_core/protocol/lufa/descriptor.c ****     {
 696:../../tmk_core/protocol/lufa/descriptor.c ****         case DTYPE_Device:
 697:../../tmk_core/protocol/lufa/descriptor.c ****             Address = &DeviceDescriptor;
 698:../../tmk_core/protocol/lufa/descriptor.c ****             Size    = sizeof(USB_Descriptor_Device_t);
 699:../../tmk_core/protocol/lufa/descriptor.c ****             break;
 700:../../tmk_core/protocol/lufa/descriptor.c ****         case DTYPE_Configuration:
 701:../../tmk_core/protocol/lufa/descriptor.c ****             Address = &ConfigurationDescriptor;
 702:../../tmk_core/protocol/lufa/descriptor.c ****             Size    = sizeof(USB_Descriptor_Configuration_t);
  40               		.loc 1 702 0
  41 001c 8DE8      		ldi r24,lo8(-115)
  42 001e 90E0      		ldi r25,0
  43               	.LVL2:
 701:../../tmk_core/protocol/lufa/descriptor.c ****             Address = &ConfigurationDescriptor;
  44               		.loc 1 701 0
  45 0020 20E0      		ldi r18,lo8(ConfigurationDescriptor)
  46 0022 30E0      		ldi r19,hi8(ConfigurationDescriptor)
 703:../../tmk_core/protocol/lufa/descriptor.c ****             break;
  47               		.loc 1 703 0
  48 0024 00C0      		rjmp .L5
  49               	.LVL3:
  50               	.L4:
 694:../../tmk_core/protocol/lufa/descriptor.c ****     switch (DescriptorType)
  51               		.loc 1 694 0
  52 0026 2132      		cpi r18,33
  53 0028 3105      		cpc r19,__zero_reg__
  54 002a 01F0      		breq .L7
  55 002c 2232      		cpi r18,34
  56 002e 3105      		cpc r19,__zero_reg__
  57 0030 01F0      		breq .L8
  58 0032 00C0      		rjmp .L15
  59               	.L3:
  60 0034 9927      		clr r25
  61               	.LVL4:
 704:../../tmk_core/protocol/lufa/descriptor.c ****         case DTYPE_String:
 705:../../tmk_core/protocol/lufa/descriptor.c ****             switch (DescriptorIndex )
  62               		.loc 1 705 0
  63 0036 8130      		cpi r24,1
  64 0038 9105      		cpc r25,__zero_reg__
  65 003a 01F0      		breq .L9
  66 003c 8230      		cpi r24,2
  67 003e 9105      		cpc r25,__zero_reg__
  68 0040 01F0      		breq .L10
  69 0042 892B      		or r24,r25
  70 0044 01F4      		brne .L15
  71               	.LVL5:
  72               	.LBB2:
 706:../../tmk_core/protocol/lufa/descriptor.c ****             {
 707:../../tmk_core/protocol/lufa/descriptor.c ****                 case 0x00:
 708:../../tmk_core/protocol/lufa/descriptor.c ****                     Address = &LanguageString;
 709:../../tmk_core/protocol/lufa/descriptor.c ****                     Size    = pgm_read_byte(&LanguageString.Header.Size);
  73               		.loc 1 709 0
  74 0046 E0E0      		ldi r30,lo8(LanguageString)
  75 0048 F0E0      		ldi r31,hi8(LanguageString)
  76 004a 00C0      		rjmp .L17
  77               	.LVL6:
  78               	.L9:
  79               	.LBE2:
  80               	.LBB3:
 710:../../tmk_core/protocol/lufa/descriptor.c ****                     break;
 711:../../tmk_core/protocol/lufa/descriptor.c ****                 case 0x01:
 712:../../tmk_core/protocol/lufa/descriptor.c ****                     Address = &ManufacturerString;
 713:../../tmk_core/protocol/lufa/descriptor.c ****                     Size    = pgm_read_byte(&ManufacturerString.Header.Size);
  81               		.loc 1 713 0
  82 004c E0E0      		ldi r30,lo8(ManufacturerString)
  83 004e F0E0      		ldi r31,hi8(ManufacturerString)
  84 0050 00C0      		rjmp .L17
  85               	.LVL7:
  86               	.L10:
  87               	.LBE3:
  88               	.LBB4:
 714:../../tmk_core/protocol/lufa/descriptor.c ****                     break;
 715:../../tmk_core/protocol/lufa/descriptor.c ****                 case 0x02:
 716:../../tmk_core/protocol/lufa/descriptor.c ****                     Address = &ProductString;
 717:../../tmk_core/protocol/lufa/descriptor.c ****                     Size    = pgm_read_byte(&ProductString.Header.Size);
  89               		.loc 1 717 0
  90 0052 E0E0      		ldi r30,lo8(ProductString)
  91 0054 F0E0      		ldi r31,hi8(ProductString)
  92               	.LVL8:
  93               	.L17:
  94               	/* #APP */
  95               	 ;  717 "../../tmk_core/protocol/lufa/descriptor.c" 1
  96 0056 8491      		lpm r24, Z
  97               		
  98               	 ;  0 "" 2
  99               	.LVL9:
 100               	/* #NOAPP */
 101               	.LBE4:
 102 0058 90E0      		ldi r25,0
 103               	.LVL10:
 716:../../tmk_core/protocol/lufa/descriptor.c ****                     Address = &ProductString;
 104               		.loc 1 716 0
 105 005a 9F01      		movw r18,r30
 718:../../tmk_core/protocol/lufa/descriptor.c ****                     break;
 106               		.loc 1 718 0
 107 005c 00C0      		rjmp .L5
 108               	.LVL11:
 109               	.L7:
 110 005e 6530      		cpi r22,lo8(5)
 111 0060 00F4      		brsh .L15
 112 0062 E62F      		mov r30,r22
 113 0064 F0E0      		ldi r31,0
 114 0066 EE0F      		lsl r30
 115 0068 FF1F      		rol r31
 116 006a E050      		subi r30,lo8(-(CSWTCH.1))
 117 006c F040      		sbci r31,hi8(-(CSWTCH.1))
 118 006e 2081      		ld r18,Z
 119 0070 3181      		ldd r19,Z+1
 120 0072 89E0      		ldi r24,lo8(9)
 121 0074 90E0      		ldi r25,0
 122               	.LVL12:
 123 0076 00C0      		rjmp .L5
 124               	.LVL13:
 125               	.L8:
 126 0078 6530      		cpi r22,lo8(5)
 127 007a 00F4      		brsh .L15
 128 007c E62F      		mov r30,r22
 129 007e F0E0      		ldi r31,0
 130 0080 DF01      		movw r26,r30
 131 0082 AA0F      		lsl r26
 132 0084 BB1F      		rol r27
 133               	.LVL14:
 134 0086 A050      		subi r26,lo8(-(CSWTCH.2))
 135 0088 B040      		sbci r27,hi8(-(CSWTCH.2))
 136 008a 2D91      		ld r18,X+
 137 008c 3C91      		ld r19,X
 138 008e E050      		subi r30,lo8(-(CSWTCH.3))
 139 0090 F040      		sbci r31,hi8(-(CSWTCH.3))
 140 0092 8081      		ld r24,Z
 141 0094 90E0      		ldi r25,0
 142 0096 00C0      		rjmp .L5
 143               	.LVL15:
 144               	.L12:
 698:../../tmk_core/protocol/lufa/descriptor.c ****             Size    = sizeof(USB_Descriptor_Device_t);
 145               		.loc 1 698 0
 146 0098 82E1      		ldi r24,lo8(18)
 147 009a 90E0      		ldi r25,0
 148               	.LVL16:
 697:../../tmk_core/protocol/lufa/descriptor.c ****             Address = &DeviceDescriptor;
 149               		.loc 1 697 0
 150 009c 20E0      		ldi r18,lo8(DeviceDescriptor)
 151 009e 30E0      		ldi r19,hi8(DeviceDescriptor)
 152 00a0 00C0      		rjmp .L5
 153               	.L15:
 154 00a2 80E0      		ldi r24,0
 155 00a4 90E0      		ldi r25,0
 156 00a6 20E0      		ldi r18,0
 157 00a8 30E0      		ldi r19,0
 158               	.LVL17:
 159               	.L5:
 719:../../tmk_core/protocol/lufa/descriptor.c ****             }
 720:../../tmk_core/protocol/lufa/descriptor.c ****             break;
 721:../../tmk_core/protocol/lufa/descriptor.c ****         case HID_DTYPE_HID:
 722:../../tmk_core/protocol/lufa/descriptor.c ****             switch (wIndex) {
 723:../../tmk_core/protocol/lufa/descriptor.c ****             case KEYBOARD_INTERFACE:
 724:../../tmk_core/protocol/lufa/descriptor.c ****                 Address = &ConfigurationDescriptor.Keyboard_HID;
 725:../../tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(USB_HID_Descriptor_HID_t);
 726:../../tmk_core/protocol/lufa/descriptor.c ****                 break;
 727:../../tmk_core/protocol/lufa/descriptor.c **** #ifdef MOUSE_ENABLE
 728:../../tmk_core/protocol/lufa/descriptor.c ****             case MOUSE_INTERFACE:
 729:../../tmk_core/protocol/lufa/descriptor.c ****                 Address = &ConfigurationDescriptor.Mouse_HID;
 730:../../tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(USB_HID_Descriptor_HID_t);
 731:../../tmk_core/protocol/lufa/descriptor.c ****                 break;
 732:../../tmk_core/protocol/lufa/descriptor.c **** #endif
 733:../../tmk_core/protocol/lufa/descriptor.c **** #ifdef EXTRAKEY_ENABLE
 734:../../tmk_core/protocol/lufa/descriptor.c ****             case EXTRAKEY_INTERFACE:
 735:../../tmk_core/protocol/lufa/descriptor.c ****                 Address = &ConfigurationDescriptor.Extrakey_HID;
 736:../../tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(USB_HID_Descriptor_HID_t);
 737:../../tmk_core/protocol/lufa/descriptor.c ****                 break;
 738:../../tmk_core/protocol/lufa/descriptor.c **** #endif
 739:../../tmk_core/protocol/lufa/descriptor.c **** #ifdef CONSOLE_ENABLE
 740:../../tmk_core/protocol/lufa/descriptor.c ****             case CONSOLE_INTERFACE:
 741:../../tmk_core/protocol/lufa/descriptor.c ****                 Address = &ConfigurationDescriptor.Console_HID;
 742:../../tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(USB_HID_Descriptor_HID_t);
 743:../../tmk_core/protocol/lufa/descriptor.c ****                 break;
 744:../../tmk_core/protocol/lufa/descriptor.c **** #endif
 745:../../tmk_core/protocol/lufa/descriptor.c **** #ifdef NKRO_ENABLE
 746:../../tmk_core/protocol/lufa/descriptor.c ****             case NKRO_INTERFACE:
 747:../../tmk_core/protocol/lufa/descriptor.c ****                 Address = &ConfigurationDescriptor.NKRO_HID;
 748:../../tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(USB_HID_Descriptor_HID_t);
 749:../../tmk_core/protocol/lufa/descriptor.c ****                 break;
 750:../../tmk_core/protocol/lufa/descriptor.c **** #endif
 751:../../tmk_core/protocol/lufa/descriptor.c ****             }
 752:../../tmk_core/protocol/lufa/descriptor.c ****             break;
 753:../../tmk_core/protocol/lufa/descriptor.c ****         case HID_DTYPE_Report:
 754:../../tmk_core/protocol/lufa/descriptor.c ****             switch (wIndex) {
 755:../../tmk_core/protocol/lufa/descriptor.c ****             case KEYBOARD_INTERFACE:
 756:../../tmk_core/protocol/lufa/descriptor.c ****                 Address = &KeyboardReport;
 757:../../tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(KeyboardReport);
 758:../../tmk_core/protocol/lufa/descriptor.c ****                 break;
 759:../../tmk_core/protocol/lufa/descriptor.c **** #ifdef MOUSE_ENABLE
 760:../../tmk_core/protocol/lufa/descriptor.c ****             case MOUSE_INTERFACE:
 761:../../tmk_core/protocol/lufa/descriptor.c ****                 Address = &MouseReport;
 762:../../tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(MouseReport);
 763:../../tmk_core/protocol/lufa/descriptor.c ****                 break;
 764:../../tmk_core/protocol/lufa/descriptor.c **** #endif
 765:../../tmk_core/protocol/lufa/descriptor.c **** #ifdef EXTRAKEY_ENABLE
 766:../../tmk_core/protocol/lufa/descriptor.c ****             case EXTRAKEY_INTERFACE:
 767:../../tmk_core/protocol/lufa/descriptor.c ****                 Address = &ExtrakeyReport;
 768:../../tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(ExtrakeyReport);
 769:../../tmk_core/protocol/lufa/descriptor.c ****                 break;
 770:../../tmk_core/protocol/lufa/descriptor.c **** #endif
 771:../../tmk_core/protocol/lufa/descriptor.c **** #ifdef CONSOLE_ENABLE
 772:../../tmk_core/protocol/lufa/descriptor.c ****             case CONSOLE_INTERFACE:
 773:../../tmk_core/protocol/lufa/descriptor.c ****                 Address = &ConsoleReport;
 774:../../tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(ConsoleReport);
 775:../../tmk_core/protocol/lufa/descriptor.c ****                 break;
 776:../../tmk_core/protocol/lufa/descriptor.c **** #endif
 777:../../tmk_core/protocol/lufa/descriptor.c **** #ifdef NKRO_ENABLE
 778:../../tmk_core/protocol/lufa/descriptor.c ****             case NKRO_INTERFACE:
 779:../../tmk_core/protocol/lufa/descriptor.c ****                 Address = &NKROReport;
 780:../../tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(NKROReport);
 781:../../tmk_core/protocol/lufa/descriptor.c ****                 break;
 782:../../tmk_core/protocol/lufa/descriptor.c **** #endif
 783:../../tmk_core/protocol/lufa/descriptor.c ****             }
 784:../../tmk_core/protocol/lufa/descriptor.c ****             break;
 785:../../tmk_core/protocol/lufa/descriptor.c ****     }
 786:../../tmk_core/protocol/lufa/descriptor.c **** 
 787:../../tmk_core/protocol/lufa/descriptor.c ****     *DescriptorAddress = Address;
 160               		.loc 1 787 0
 161 00aa FA01      		movw r30,r20
 162 00ac 3183      		std Z+1,r19
 163 00ae 2083      		st Z,r18
 788:../../tmk_core/protocol/lufa/descriptor.c ****     return Size;
 789:../../tmk_core/protocol/lufa/descriptor.c **** }
 164               		.loc 1 789 0
 165 00b0 0895      		ret
 166               		.cfi_endproc
 167               	.LFE100:
 169               		.section	.rodata.CSWTCH.3,"a",@progbits
 172               	CSWTCH.3:
 173 0000 3F        		.byte	63
 174 0001 4D        		.byte	77
 175 0002 36        		.byte	54
 176 0003 20        		.byte	32
 177 0004 39        		.byte	57
 178               		.section	.rodata.CSWTCH.2,"a",@progbits
 181               	CSWTCH.2:
 182 0000 0000      		.word	KeyboardReport
 183 0002 0000      		.word	MouseReport
 184 0004 0000      		.word	ExtrakeyReport
 185 0006 0000      		.word	ConsoleReport
 186 0008 0000      		.word	NKROReport
 187               		.section	.rodata.CSWTCH.1,"a",@progbits
 190               	CSWTCH.1:
 191 0000 0000      		.word	ConfigurationDescriptor+18
 192 0002 0000      		.word	ConfigurationDescriptor+43
 193 0004 0000      		.word	ConfigurationDescriptor+68
 194 0006 0000      		.word	ConfigurationDescriptor+93
 195 0008 0000      		.word	ConfigurationDescriptor+125
 196               	.global	ProductString
 197               		.section	.progmem.data.ProductString,"a",@progbits
 200               	ProductString:
 201 0000 16        		.byte	22
 202 0001 03        		.byte	3
 203 0002 4500      		.string	"E"
 204 0004 7200      		.string	"r"
 205 0006 6700      		.string	"g"
 206 0008 6F00      		.string	"o"
 207 000a 4400      		.string	"D"
 208 000c 6F00      		.string	"o"
 209 000e 7800      		.string	"x"
 210 0010 2000      		.string	" "
 211 0012 4500      		.string	"E"
 212 0014 5A00      		.string	"Z"
 213 0016 00        		.string	""
 214 0017 00        		.string	""
 215               	.global	ManufacturerString
 216               		.section	.progmem.data.ManufacturerString,"a",@progbits
 219               	ManufacturerString:
 220 0000 16        		.byte	22
 221 0001 03        		.byte	3
 222 0002 4500      		.string	"E"
 223 0004 7200      		.string	"r"
 224 0006 6700      		.string	"g"
 225 0008 6F00      		.string	"o"
 226 000a 4400      		.string	"D"
 227 000c 6F00      		.string	"o"
 228 000e 7800      		.string	"x"
 229 0010 2000      		.string	" "
 230 0012 4500      		.string	"E"
 231 0014 5A00      		.string	"Z"
 232 0016 00        		.string	""
 233 0017 00        		.string	""
 234               	.global	LanguageString
 235               		.section	.progmem.data.LanguageString,"a",@progbits
 238               	LanguageString:
 239 0000 04        		.byte	4
 240 0001 03        		.byte	3
 241 0002 0904      		.word	1033
 242               	.global	ConfigurationDescriptor
 243               		.section	.progmem.data.ConfigurationDescriptor,"a",@progbits
 246               	ConfigurationDescriptor:
 247 0000 09        		.byte	9
 248 0001 02        		.byte	2
 249 0002 8D00      		.word	141
 250 0004 05        		.byte	5
 251 0005 01        		.byte	1
 252 0006 00        		.byte	0
 253 0007 A0        		.byte	-96
 254 0008 FA        		.byte	-6
 255 0009 09        		.byte	9
 256 000a 04        		.byte	4
 257 000b 00        		.byte	0
 258 000c 00        		.byte	0
 259 000d 01        		.byte	1
 260 000e 03        		.byte	3
 261 000f 01        		.byte	1
 262 0010 01        		.byte	1
 263 0011 00        		.byte	0
 264 0012 09        		.byte	9
 265 0013 21        		.byte	33
 266 0014 1101      		.word	273
 267 0016 00        		.byte	0
 268 0017 01        		.byte	1
 269 0018 22        		.byte	34
 270 0019 3F00      		.word	63
 271 001b 07        		.byte	7
 272 001c 05        		.byte	5
 273 001d 81        		.byte	-127
 274 001e 03        		.byte	3
 275 001f 0800      		.word	8
 276 0021 0A        		.byte	10
 277 0022 09        		.byte	9
 278 0023 04        		.byte	4
 279 0024 01        		.byte	1
 280 0025 00        		.byte	0
 281 0026 01        		.byte	1
 282 0027 03        		.byte	3
 283 0028 01        		.byte	1
 284 0029 02        		.byte	2
 285 002a 00        		.byte	0
 286 002b 09        		.byte	9
 287 002c 21        		.byte	33
 288 002d 1101      		.word	273
 289 002f 00        		.byte	0
 290 0030 01        		.byte	1
 291 0031 22        		.byte	34
 292 0032 4D00      		.word	77
 293 0034 07        		.byte	7
 294 0035 05        		.byte	5
 295 0036 82        		.byte	-126
 296 0037 03        		.byte	3
 297 0038 0800      		.word	8
 298 003a 0A        		.byte	10
 299 003b 09        		.byte	9
 300 003c 04        		.byte	4
 301 003d 02        		.byte	2
 302 003e 00        		.byte	0
 303 003f 01        		.byte	1
 304 0040 03        		.byte	3
 305 0041 00        		.byte	0
 306 0042 00        		.byte	0
 307 0043 00        		.byte	0
 308 0044 09        		.byte	9
 309 0045 21        		.byte	33
 310 0046 1101      		.word	273
 311 0048 00        		.byte	0
 312 0049 01        		.byte	1
 313 004a 22        		.byte	34
 314 004b 3600      		.word	54
 315 004d 07        		.byte	7
 316 004e 05        		.byte	5
 317 004f 83        		.byte	-125
 318 0050 03        		.byte	3
 319 0051 0800      		.word	8
 320 0053 0A        		.byte	10
 321 0054 09        		.byte	9
 322 0055 04        		.byte	4
 323 0056 03        		.byte	3
 324 0057 00        		.byte	0
 325 0058 02        		.byte	2
 326 0059 03        		.byte	3
 327 005a 00        		.byte	0
 328 005b 00        		.byte	0
 329 005c 00        		.byte	0
 330 005d 09        		.byte	9
 331 005e 21        		.byte	33
 332 005f 1101      		.word	273
 333 0061 00        		.byte	0
 334 0062 01        		.byte	1
 335 0063 22        		.byte	34
 336 0064 2000      		.word	32
 337 0066 07        		.byte	7
 338 0067 05        		.byte	5
 339 0068 84        		.byte	-124
 340 0069 03        		.byte	3
 341 006a 2000      		.word	32
 342 006c 01        		.byte	1
 343 006d 07        		.byte	7
 344 006e 05        		.byte	5
 345 006f 04        		.byte	4
 346 0070 03        		.byte	3
 347 0071 2000      		.word	32
 348 0073 01        		.byte	1
 349 0074 09        		.byte	9
 350 0075 04        		.byte	4
 351 0076 04        		.byte	4
 352 0077 00        		.byte	0
 353 0078 01        		.byte	1
 354 0079 03        		.byte	3
 355 007a 00        		.byte	0
 356 007b 00        		.byte	0
 357 007c 00        		.byte	0
 358 007d 09        		.byte	9
 359 007e 21        		.byte	33
 360 007f 1101      		.word	273
 361 0081 00        		.byte	0
 362 0082 01        		.byte	1
 363 0083 22        		.byte	34
 364 0084 3900      		.word	57
 365 0086 07        		.byte	7
 366 0087 05        		.byte	5
 367 0088 85        		.byte	-123
 368 0089 03        		.byte	3
 369 008a 1000      		.word	16
 370 008c 01        		.byte	1
 371               	.global	DeviceDescriptor
 372               		.section	.progmem.data.DeviceDescriptor,"a",@progbits
 375               	DeviceDescriptor:
 376 0000 12        		.byte	18
 377 0001 01        		.byte	1
 378 0002 1001      		.word	272
 379 0004 00        		.byte	0
 380 0005 00        		.byte	0
 381 0006 00        		.byte	0
 382 0007 08        		.byte	8
 383 0008 EDFE      		.word	-275
 384 000a 0713      		.word	4871
 385 000c 0100      		.word	1
 386 000e 01        		.byte	1
 387 000f 02        		.byte	2
 388 0010 00        		.byte	0
 389 0011 01        		.byte	1
 390               	.global	NKROReport
 391               		.section	.progmem.data.NKROReport,"a",@progbits
 394               	NKROReport:
 395 0000 05        		.byte	5
 396 0001 01        		.byte	1
 397 0002 09        		.byte	9
 398 0003 06        		.byte	6
 399 0004 A1        		.byte	-95
 400 0005 01        		.byte	1
 401 0006 05        		.byte	5
 402 0007 07        		.byte	7
 403 0008 19        		.byte	25
 404 0009 E0        		.byte	-32
 405 000a 29        		.byte	41
 406 000b E7        		.byte	-25
 407 000c 15        		.byte	21
 408 000d 00        		.byte	0
 409 000e 25        		.byte	37
 410 000f 01        		.byte	1
 411 0010 95        		.byte	-107
 412 0011 08        		.byte	8
 413 0012 75        		.byte	117
 414 0013 01        		.byte	1
 415 0014 81        		.byte	-127
 416 0015 02        		.byte	2
 417 0016 05        		.byte	5
 418 0017 08        		.byte	8
 419 0018 19        		.byte	25
 420 0019 01        		.byte	1
 421 001a 29        		.byte	41
 422 001b 05        		.byte	5
 423 001c 95        		.byte	-107
 424 001d 05        		.byte	5
 425 001e 75        		.byte	117
 426 001f 01        		.byte	1
 427 0020 91        		.byte	-111
 428 0021 02        		.byte	2
 429 0022 95        		.byte	-107
 430 0023 01        		.byte	1
 431 0024 75        		.byte	117
 432 0025 03        		.byte	3
 433 0026 91        		.byte	-111
 434 0027 01        		.byte	1
 435 0028 05        		.byte	5
 436 0029 07        		.byte	7
 437 002a 19        		.byte	25
 438 002b 00        		.byte	0
 439 002c 29        		.byte	41
 440 002d 77        		.byte	119
 441 002e 15        		.byte	21
 442 002f 00        		.byte	0
 443 0030 25        		.byte	37
 444 0031 01        		.byte	1
 445 0032 95        		.byte	-107
 446 0033 78        		.byte	120
 447 0034 75        		.byte	117
 448 0035 01        		.byte	1
 449 0036 81        		.byte	-127
 450 0037 02        		.byte	2
 451 0038 C0        		.byte	-64
 452               	.global	ConsoleReport
 453               		.section	.progmem.data.ConsoleReport,"a",@progbits
 456               	ConsoleReport:
 457 0000 06        		.byte	6
 458 0001 31        		.byte	49
 459 0002 FF        		.byte	-1
 460 0003 09        		.byte	9
 461 0004 74        		.byte	116
 462 0005 A1        		.byte	-95
 463 0006 01        		.byte	1
 464 0007 09        		.byte	9
 465 0008 75        		.byte	117
 466 0009 15        		.byte	21
 467 000a 00        		.byte	0
 468 000b 25        		.byte	37
 469 000c FF        		.byte	-1
 470 000d 95        		.byte	-107
 471 000e 20        		.byte	32
 472 000f 75        		.byte	117
 473 0010 08        		.byte	8
 474 0011 81        		.byte	-127
 475 0012 02        		.byte	2
 476 0013 09        		.byte	9
 477 0014 76        		.byte	118
 478 0015 15        		.byte	21
 479 0016 00        		.byte	0
 480 0017 25        		.byte	37
 481 0018 FF        		.byte	-1
 482 0019 95        		.byte	-107
 483 001a 20        		.byte	32
 484 001b 75        		.byte	117
 485 001c 08        		.byte	8
 486 001d 91        		.byte	-111
 487 001e 02        		.byte	2
 488 001f C0        		.byte	-64
 489               	.global	ExtrakeyReport
 490               		.section	.progmem.data.ExtrakeyReport,"a",@progbits
 493               	ExtrakeyReport:
 494 0000 05        		.byte	5
 495 0001 01        		.byte	1
 496 0002 09        		.byte	9
 497 0003 80        		.byte	-128
 498 0004 A1        		.byte	-95
 499 0005 01        		.byte	1
 500 0006 85        		.byte	-123
 501 0007 02        		.byte	2
 502 0008 16        		.byte	22
 503 0009 01        		.byte	1
 504 000a 00        		.byte	0
 505 000b 26        		.byte	38
 506 000c B7        		.byte	-73
 507 000d 00        		.byte	0
 508 000e 1A        		.byte	26
 509 000f 01        		.byte	1
 510 0010 00        		.byte	0
 511 0011 2A        		.byte	42
 512 0012 B7        		.byte	-73
 513 0013 00        		.byte	0
 514 0014 75        		.byte	117
 515 0015 10        		.byte	16
 516 0016 95        		.byte	-107
 517 0017 01        		.byte	1
 518 0018 81        		.byte	-127
 519 0019 00        		.byte	0
 520 001a C0        		.byte	-64
 521 001b 05        		.byte	5
 522 001c 0C        		.byte	12
 523 001d 09        		.byte	9
 524 001e 01        		.byte	1
 525 001f A1        		.byte	-95
 526 0020 01        		.byte	1
 527 0021 85        		.byte	-123
 528 0022 03        		.byte	3
 529 0023 16        		.byte	22
 530 0024 01        		.byte	1
 531 0025 00        		.byte	0
 532 0026 26        		.byte	38
 533 0027 9C        		.byte	-100
 534 0028 02        		.byte	2
 535 0029 1A        		.byte	26
 536 002a 01        		.byte	1
 537 002b 00        		.byte	0
 538 002c 2A        		.byte	42
 539 002d 9C        		.byte	-100
 540 002e 02        		.byte	2
 541 002f 75        		.byte	117
 542 0030 10        		.byte	16
 543 0031 95        		.byte	-107
 544 0032 01        		.byte	1
 545 0033 81        		.byte	-127
 546 0034 00        		.byte	0
 547 0035 C0        		.byte	-64
 548               	.global	MouseReport
 549               		.section	.progmem.data.MouseReport,"a",@progbits
 552               	MouseReport:
 553 0000 05        		.byte	5
 554 0001 01        		.byte	1
 555 0002 09        		.byte	9
 556 0003 02        		.byte	2
 557 0004 A1        		.byte	-95
 558 0005 01        		.byte	1
 559 0006 09        		.byte	9
 560 0007 01        		.byte	1
 561 0008 A1        		.byte	-95
 562 0009 00        		.byte	0
 563 000a 05        		.byte	5
 564 000b 09        		.byte	9
 565 000c 19        		.byte	25
 566 000d 01        		.byte	1
 567 000e 29        		.byte	41
 568 000f 05        		.byte	5
 569 0010 15        		.byte	21
 570 0011 00        		.byte	0
 571 0012 25        		.byte	37
 572 0013 01        		.byte	1
 573 0014 95        		.byte	-107
 574 0015 05        		.byte	5
 575 0016 75        		.byte	117
 576 0017 01        		.byte	1
 577 0018 81        		.byte	-127
 578 0019 02        		.byte	2
 579 001a 95        		.byte	-107
 580 001b 01        		.byte	1
 581 001c 75        		.byte	117
 582 001d 03        		.byte	3
 583 001e 81        		.byte	-127
 584 001f 01        		.byte	1
 585 0020 05        		.byte	5
 586 0021 01        		.byte	1
 587 0022 09        		.byte	9
 588 0023 30        		.byte	48
 589 0024 09        		.byte	9
 590 0025 31        		.byte	49
 591 0026 15        		.byte	21
 592 0027 81        		.byte	-127
 593 0028 25        		.byte	37
 594 0029 7F        		.byte	127
 595 002a 95        		.byte	-107
 596 002b 02        		.byte	2
 597 002c 75        		.byte	117
 598 002d 08        		.byte	8
 599 002e 81        		.byte	-127
 600 002f 06        		.byte	6
 601 0030 09        		.byte	9
 602 0031 38        		.byte	56
 603 0032 15        		.byte	21
 604 0033 81        		.byte	-127
 605 0034 25        		.byte	37
 606 0035 7F        		.byte	127
 607 0036 95        		.byte	-107
 608 0037 01        		.byte	1
 609 0038 75        		.byte	117
 610 0039 08        		.byte	8
 611 003a 81        		.byte	-127
 612 003b 06        		.byte	6
 613 003c 05        		.byte	5
 614 003d 0C        		.byte	12
 615 003e 0A        		.byte	10
 616 003f 38        		.byte	56
 617 0040 02        		.byte	2
 618 0041 15        		.byte	21
 619 0042 81        		.byte	-127
 620 0043 25        		.byte	37
 621 0044 7F        		.byte	127
 622 0045 95        		.byte	-107
 623 0046 01        		.byte	1
 624 0047 75        		.byte	117
 625 0048 08        		.byte	8
 626 0049 81        		.byte	-127
 627 004a 06        		.byte	6
 628 004b C0        		.byte	-64
 629 004c C0        		.byte	-64
 630               	.global	KeyboardReport
 631               		.section	.progmem.data.KeyboardReport,"a",@progbits
 634               	KeyboardReport:
 635 0000 05        		.byte	5
 636 0001 01        		.byte	1
 637 0002 09        		.byte	9
 638 0003 06        		.byte	6
 639 0004 A1        		.byte	-95
 640 0005 01        		.byte	1
 641 0006 05        		.byte	5
 642 0007 07        		.byte	7
 643 0008 19        		.byte	25
 644 0009 E0        		.byte	-32
 645 000a 29        		.byte	41
 646 000b E7        		.byte	-25
 647 000c 15        		.byte	21
 648 000d 00        		.byte	0
 649 000e 25        		.byte	37
 650 000f 01        		.byte	1
 651 0010 95        		.byte	-107
 652 0011 08        		.byte	8
 653 0012 75        		.byte	117
 654 0013 01        		.byte	1
 655 0014 81        		.byte	-127
 656 0015 02        		.byte	2
 657 0016 95        		.byte	-107
 658 0017 01        		.byte	1
 659 0018 75        		.byte	117
 660 0019 08        		.byte	8
 661 001a 81        		.byte	-127
 662 001b 01        		.byte	1
 663 001c 05        		.byte	5
 664 001d 08        		.byte	8
 665 001e 19        		.byte	25
 666 001f 01        		.byte	1
 667 0020 29        		.byte	41
 668 0021 05        		.byte	5
 669 0022 95        		.byte	-107
 670 0023 05        		.byte	5
 671 0024 75        		.byte	117
 672 0025 01        		.byte	1
 673 0026 91        		.byte	-111
 674 0027 02        		.byte	2
 675 0028 95        		.byte	-107
 676 0029 01        		.byte	1
 677 002a 75        		.byte	117
 678 002b 03        		.byte	3
 679 002c 91        		.byte	-111
 680 002d 01        		.byte	1
 681 002e 05        		.byte	5
 682 002f 07        		.byte	7
 683 0030 19        		.byte	25
 684 0031 00        		.byte	0
 685 0032 29        		.byte	41
 686 0033 FF        		.byte	-1
 687 0034 15        		.byte	21
 688 0035 00        		.byte	0
 689 0036 25        		.byte	37
 690 0037 FF        		.byte	-1
 691 0038 95        		.byte	-107
 692 0039 06        		.byte	6
 693 003a 75        		.byte	117
 694 003b 08        		.byte	8
 695 003c 81        		.byte	-127
 696 003d 00        		.byte	0
 697 003e C0        		.byte	-64
 698               		.text
 699               	.Letext0:
 700               		.file 2 "/usr/local/CrossPack-AVR-20131216/avr/include/stdint.h"
 701               		.file 3 "/usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/include/stddef.h"
 702               		.file 4 "../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../StdDescriptors.h"
 703               		.file 5 "../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../Common/HIDClassCom
 704               		.file 6 "../../tmk_core/protocol/lufa/descriptor.h"
 705               		.file 7 "../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/USBTask.h"
DEFINED SYMBOLS
                            *ABS*:00000000 descriptor.c
/var/folders/1b/xfvjmdyj6l31z1llzpnz5cwr0000gn/T//ccQwYwuh.s:2      *ABS*:0000003e __SP_H__
/var/folders/1b/xfvjmdyj6l31z1llzpnz5cwr0000gn/T//ccQwYwuh.s:3      *ABS*:0000003d __SP_L__
/var/folders/1b/xfvjmdyj6l31z1llzpnz5cwr0000gn/T//ccQwYwuh.s:4      *ABS*:0000003f __SREG__
/var/folders/1b/xfvjmdyj6l31z1llzpnz5cwr0000gn/T//ccQwYwuh.s:5      *ABS*:00000000 __tmp_reg__
/var/folders/1b/xfvjmdyj6l31z1llzpnz5cwr0000gn/T//ccQwYwuh.s:6      *ABS*:00000001 __zero_reg__
/var/folders/1b/xfvjmdyj6l31z1llzpnz5cwr0000gn/T//ccQwYwuh.s:13     .text.CALLBACK_USB_GetDescriptor:00000000 CALLBACK_USB_GetDescriptor
/var/folders/1b/xfvjmdyj6l31z1llzpnz5cwr0000gn/T//ccQwYwuh.s:246    .progmem.data.ConfigurationDescriptor:00000000 ConfigurationDescriptor
/var/folders/1b/xfvjmdyj6l31z1llzpnz5cwr0000gn/T//ccQwYwuh.s:238    .progmem.data.LanguageString:00000000 LanguageString
/var/folders/1b/xfvjmdyj6l31z1llzpnz5cwr0000gn/T//ccQwYwuh.s:219    .progmem.data.ManufacturerString:00000000 ManufacturerString
/var/folders/1b/xfvjmdyj6l31z1llzpnz5cwr0000gn/T//ccQwYwuh.s:200    .progmem.data.ProductString:00000000 ProductString
/var/folders/1b/xfvjmdyj6l31z1llzpnz5cwr0000gn/T//ccQwYwuh.s:190    .rodata.CSWTCH.1:00000000 CSWTCH.1
/var/folders/1b/xfvjmdyj6l31z1llzpnz5cwr0000gn/T//ccQwYwuh.s:181    .rodata.CSWTCH.2:00000000 CSWTCH.2
/var/folders/1b/xfvjmdyj6l31z1llzpnz5cwr0000gn/T//ccQwYwuh.s:172    .rodata.CSWTCH.3:00000000 CSWTCH.3
/var/folders/1b/xfvjmdyj6l31z1llzpnz5cwr0000gn/T//ccQwYwuh.s:375    .progmem.data.DeviceDescriptor:00000000 DeviceDescriptor
/var/folders/1b/xfvjmdyj6l31z1llzpnz5cwr0000gn/T//ccQwYwuh.s:634    .progmem.data.KeyboardReport:00000000 KeyboardReport
/var/folders/1b/xfvjmdyj6l31z1llzpnz5cwr0000gn/T//ccQwYwuh.s:552    .progmem.data.MouseReport:00000000 MouseReport
/var/folders/1b/xfvjmdyj6l31z1llzpnz5cwr0000gn/T//ccQwYwuh.s:493    .progmem.data.ExtrakeyReport:00000000 ExtrakeyReport
/var/folders/1b/xfvjmdyj6l31z1llzpnz5cwr0000gn/T//ccQwYwuh.s:456    .progmem.data.ConsoleReport:00000000 ConsoleReport
/var/folders/1b/xfvjmdyj6l31z1llzpnz5cwr0000gn/T//ccQwYwuh.s:394    .progmem.data.NKROReport:00000000 NKROReport

UNDEFINED SYMBOLS
__do_copy_data
